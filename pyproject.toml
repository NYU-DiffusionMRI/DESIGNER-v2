[build-system]
requires = ["setuptools>=42", "wheel", "pybind11>=2.12.0"]
build-backend = "setuptools.build_meta"

[project]
name = "designer2"
version = "2.0.12"
description = "DESIGNER and TMI package for brain diffusion MRI processing"
readme = "README.md"
license = {file = "license.txt"}
authors = [
    {name = "Benjamin Ades-Aron", email = "benjamin.ades-aron@nyulangone.org"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "nibabel>=3.2.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "dipy>=1.5.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-html>=3.1.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "pytest-benchmark>=4.0.0",
    "psutil>=5.9.0",
    "coverage>=6.5.0",
    "codecov>=2.1.12",
    "tox>=4.0.0",
    "pytest-timeout>=2.1.0",
]
dev = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0",
    "pytest-doctestplus>=0.12.1",
]

[project.urls]
Homepage = "https://github.com/NYU-DiffusionMRI/DESIGNER-v2"
Documentation = "https://nyu-diffusionmri.github.io/docs/designer/"
Repository = "https://github.com/NYU-DiffusionMRI/DESIGNER-v2"
Issues = "https://github.com/NYU-DiffusionMRI/DESIGNER-v2/issues"

[project.scripts]
designer = "designer2.designer:main"
tmi = "designer2.tmi:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["designer2*", "lib*", "constant*"]
exclude = ["tests*", "docs*", "build*", "dist*"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=designer2",
    "--cov=lib",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-branch",
    "--durations=10",
    "--junitxml=test-results.xml",
]
markers = [
    "integration: Integration tests (may be slow)",
    "performance: Performance and benchmarking tests", 
    "stress: Stress tests that may take longer",
    "unit: Fast unit tests",
    "slow: Tests that take more than 5 seconds",
    "real_deps: Tests that require real dependencies (MRtrix3, FSL, etc.)",
]

[tool.coverage.run]
source = ["designer2", "lib"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/build/*",
    "*/dist/*",
    "*/__pycache__/*",
    "*/.*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "scipy.*",
    "nibabel.*", 
    "matplotlib.*",
    "dipy.*",
    "mrtrix3.*",
    "pandas.*",
]
ignore_missing_imports = true