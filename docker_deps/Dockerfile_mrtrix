FROM python:3.12.1-bookworm AS builder

# Install build dependencies in a single layer
RUN apt-get -qq update \
    && apt-get install -yq --no-install-recommends \
    g++-11 \
    libeigen3-dev \
    libfftw3-dev \
    libgl1-mesa-dev \
    libpng-dev \
    libqt5opengl5-dev \
    libqt5svg5-dev \
    zlib1g-dev \
    ninja-build \
    ccache \
    cmake \
    git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set build arguments and environment variables
ARG CC=gcc-11
ARG CXX=g++-11
ARG BUILD_SHARED_LIBS=ON

# Set up build directory
WORKDIR /usr/local
RUN mkdir -p mrtrix3/build

# Clone and build mrtrix with optimized settings
RUN git clone https://github.com/MRtrix3/mrtrix3.git mrtrix3_code \
    && cd mrtrix3_code \
    && git checkout 205dd53ef \
    && git submodule update --init --recursive \
    && cd /usr/local/mrtrix3/build \
    && cmake \
        -GNinja \
        -DCMAKE_INSTALL_PREFIX=/usr/local/mrtrix3 \
        -DBUILD_SHARED_LIBS=ON \
        -DMRTRIX_USE_QT5=ON \
        # Enable release mode optimizations and disable debug info
        -DCMAKE_BUILD_TYPE=Release \
        # Enable maximum compiler optimizations (-O3) and CPU-specific optimizations
        -DCMAKE_CXX_FLAGS="-O3 -march=native" \
        /usr/local/mrtrix3_code \
    && cmake --build . --parallel $(nproc) \
    && cmake --install .

# Final stage
FROM debian:bookworm-slim

# Copy only the necessary files from builder
COPY --from=builder /usr/local/mrtrix3/build /usr/local/mrtrix3/build

# Clean up any unnecessary files in the final image
RUN find /usr/local/mrtrix3/build -type f -name "*.h" -delete \
    && find /usr/local/mrtrix3/build -type f -name "*.hpp" -delete \
    && find /usr/local/mrtrix3/build -type f -name "*.cmake" -delete \
    && find /usr/local/mrtrix3/build -type f -name "*.ninja" -delete
