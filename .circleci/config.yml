version: 2.1

commands:
  build_prod_docker_image:
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Build and tag docker container
          command: |
            docker build --platform=linux/amd64 --target production -t $DOCKERHUB_USERNAME/designer2:<<parameters.tag>> .
      - run:
          name: Test designer command
          command: |
            docker run --rm $DOCKERHUB_USERNAME/designer2:<<parameters.tag>> designer -version
      - run:
          name: Test fsl command
          command: |
            docker run --rm $DOCKERHUB_USERNAME/designer2:<<parameters.tag>> flirt -version
      - run:
          name: Test mrtrix command
          command: |
            docker run --rm $DOCKERHUB_USERNAME/designer2:<<parameters.tag>> mrinfo -version
      - run:
      # Although this command verifies that the N4BiasFieldCorrection binary is installed, it doesnâ€™t necessarily guarantee that dwibiascorrect ants -bias ... will function correctly.
          name: Test ANTs N4BiasFieldCorrection command
          command: |
            docker run --rm $DOCKERHUB_USERNAME/designer2:<<parameters.tag>> N4BiasFieldCorrection --help

jobs:
  build-and-push:
    parameters:
      tag:
        type: string
    docker:
      - image: cimg/base:2024.01
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - build_prod_docker_image:
          tag: <<parameters.tag>>
      - run:
          name: push docker image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push $DOCKERHUB_USERNAME/designer2:<<parameters.tag>>
  
  e2e-test:
    parameters:
      tag:
        type: string
    docker:
      - image: cimg/base:2024.01
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - build_prod_docker_image:
          tag: <<parameters.tag>>
      - run:
          name: Build e2e test docker image
          # cached materials from the previous step are used for e2e image build due to multi-stage build
          command: |
            docker build \
              --platform=linux/amd64 \
              --build-context test-context=./tests \
              --target test \
              -t designer2:test \
              .
      - run:
          name: Run e2e tests
          command: |
            echo "Skipping e2e tests for now (save credits)"
            # docker run --rm \
            #   -w /app \
            #   designer2:test \
            #   pytest -s -x \
            #   --dist loadscope \
            #   -n 4 \
            #   tests

workflows:
  build-and-run-e2e-test:
    jobs:
      - e2e-test:
          name: Build and run e2e test
          tag: commit-${CIRCLE_SHA1}
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
          context:
            - DockerHub
  build-and-push-when-merged-to-main:
    jobs:
      - build-and-push:
          name: Deploy Main
          tag: main
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
          context:
            - DockerHub
  build-and-push-on-tag:
    jobs:
      - build-and-push:
          name: Deploy Tagged Releases
          tag: ${CIRCLE_TAG}
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          context:
            - DockerHub
  
